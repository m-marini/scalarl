// Copyright (c) 2019 Marco Marini, marco.marini@mmarini.org
//
// Licensed under the MIT License (MIT);
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://opensource.org/licenses/MIT
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

package org.mmarini.scalarl

/**
 * The information of a step generated by a learning session
 *
 * @Constructor creates a [Step]
 * @param step        the session step number
 * @param episode     the episode number
 * @param episodeStep the episode step number
 * @action the action executed
 * @param reward      the reward received by agent
 * @param endUp       true if final step of episode
 * @param beforeEnv   the environment before step
 * @param beforeAgent the agent before the step
 * @param afterEnv    the environment after the step
 * @param afterAgent  the agent after the step
 * @param session     the session
 */
case class Step(
                 step: Int,
                 episode: Int,
                 episodeStep: Int,
                 action: ChannelAction,
                 reward: Reward,
                 endUp: Boolean,
                 beforeEnv: Env,
                 beforeAgent: Agent,
                 afterEnv: Env,
                 afterAgent: Agent,
                 session: Session)
